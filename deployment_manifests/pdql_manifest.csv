displayName;filterPdql;folderId;isDeleted;isInvalid;selectionPdql;type
А_Группировка по ОС;none;0f37209104c1460c83fcc3a366b7b213;false;false;select(@Host, Host.@Name, Host.@Importance, Host.OsName, Host.@CreationTime, Host.@UpdateTime) | group(Host.OsName, COUNT(@Host));common
А_Группировка по СОФТУ;none;0f37209104c1460c83fcc3a366b7b213;false;false;"select(@Host, Host.OsName, Host.Softs.Name) | unique() | filter(Host.Softs.Name != null) | group(Host.Softs.Name, COUNT(@Host)) | sort(""COUNT(@Host)"" DESC)";common
А_Открытый %порт% %протокол%;filter(Host[Endpoints<TransportEndpoint>[Port = 22 and Status = 'Open' and Protocol = 'tcp']]) ;18110420f62b4f1389ad18ebb76fb421;false;false;select(@Host, Host.OsName, Host.@CreationTime, Host.@UpdateTime) | sort(@Host ASC);common
А_Средства удаленного доступа;filter(Host.Softs.Name match 'Remote Management' or Host.Softs.Name match 'Remote Access' or Host.Softs.Name match 'Remote Desktop' or Host.Softs.Name match 'TeamViewer');18110420f62b4f1389ad18ebb76fb421;false;false;select(@Host, Host.OsName, Host.@CreationTime, Host.@UpdateTime) | sort(@Host ASC);common
А_Нестандартные админы Windows;none;0f37209104c1460c83fcc3a366b7b213;false;false;"select(@WindowsHost as PC, WindowsHost.Groups.Name as GroupName, WindowsHost.Groups.Members.Name as UserName) | filter(GroupName in ['Администраторы', 'Administrators']) | filter(UserName not like ""Administrator"") | group(PC) | sort(PC ASC)";common
А_Группировка по BDU;none;56aae9622e564dda845b510003062edc;false;false;"select(@Host, Host.@Importance as Imprt, Host.@Vulners as Vulner, Host.@Vulners.Ids as Id, Host.@Vulners.SeverityRating as Severity, Host.@Vulners.DiscoveryTime as Discovered, Host.@Vulners.VulnerableEntity.Name as VulnerableEntity, Host.@Vulners.Description as Description, Host.@Vulners.HowToFix as Fix, Host.@Vulners.Metrics.Exploitable as HasExploit, Host.@Vulners.IsTrend as IsTrend, Host.@Vulners.Status, Host.@Vulners.CVSS2TemporalScore as CVSS2TmpScore, Host.@Vulners.CVSS2BaseScore as CVSS2BaseScore, Host.@Vulners.CVSS3TemporalScore as CVSS3TmpScore, Host.@Vulners.CVSS3BaseScore as CVSS3BaseScore, Host.@Vulners.CVSS2Vector as CVSS2Vector, Host.@Vulners.CVSS3Vector as CVSS3Vector, Host.@Vulners.StatusUpdateTime as UpdateTime, Host.@Vulners.DueTime as SolveBefore) | filter(Id like ""BDU%"") | sort(Imprt DESC, SolveBefore DESC) | group(Id, COUNT(*), MAX(CVSS2BaseScore), MAX(CVSS3BaseScore)) | sort(""MAX(CVSS3BaseScore)"" DESC, ""MAX(CVSS2BaseScore)"" DESC, ""COUNT(*)"" DESC)";common
А_Группировка по CVE;none;56aae9622e564dda845b510003062edc;false;false;"select(@Host, Host.@Importance as Imprt, Host.@Vulners as Vulner, Host.@Vulners.Ids as CVE_Id, Host.@Vulners.SeverityRating as Severity, Host.@Vulners.DiscoveryTime as Discovered, Host.@Vulners.VulnerableEntity.Name as VulnerableEntity, Host.@Vulners.Description as Description, Host.@Vulners.HowToFix as Fix, Host.@Vulners.Metrics.Exploitable as HasExploit, Host.@Vulners.IsTrend as IsTrend, Host.@Vulners.Status, Host.@Vulners.CVSS2TemporalScore as CVSS2TmpScore, Host.@Vulners.CVSS2BaseScore as CVSS2BaseScore, Host.@Vulners.CVSS3TemporalScore as CVSS3TmpScore, Host.@Vulners.CVSS3BaseScore as CVSS3BaseScore, Host.@Vulners.CVSS2Vector as CVSS2Vector, Host.@Vulners.CVSS3Vector as CVSS3Vector, Host.@Vulners.StatusUpdateTime as UpdateTime, Host.@Vulners.DueTime as SolveBefore) | filter(CVE_id like ""CVE%"") | sort(Imprt DESC, Severity DESC, SolveBefore DESC) | group(CVE_Id, COUNT(@Host), MAX(CVSS3TmpScore), MAX(CVSS2TmpScore)) | sort(""MAX(CVSS3TmpScore)"" DESC, ""MAX(CVSS2TmpScore)"" DESC, ""COUNT(@Host)"" DESC)";common
А_Группировка по софту %вендора %;none;56aae9622e564dda845b510003062edc;false;false;"select(@Host, Host.Softs.@Vulners, Host.Softs.@Vulners.CVEs, Host.Softs, Host.Softs.Vendor, Host.Softs.InstallPath) | filter(Host.Softs.@Vulners != null and Host.Softs.Vendor = ""Adobe Systems"") | group(Host.Softs, COUNT(*))";common
А_Группировка по группам;none;56aae9622e564dda845b510003062edc;false;false;"select(@Host, Host.@Groups.Name) | join(select(@Host, Host.@Vulners, Host.@Vulners.SeverityRating) | filter(Host.@Vulners != null and Host.@Vulners.SeverityRating != null) as Q, @Host = Q.@Host) | group(Host.@Groups.Name, Q.Host.@Vulners.SeverityRating, Q.@Host, COUNT(Q.Host.@Vulners), COMPACT(Q.Host.@Vulners)) | sort(Q.@Host ASC, Q.Host.@Vulners.SeverityRating DESC) | group(Host.@Groups.Name, SUM(""COUNT(Q.Host.@Vulners)"")) | sort(""SUM(COUNT(Q.Host.@Vulners))"" DESC)";common
А_Группировка по хостам;none;56aae9622e564dda845b510003062edc;false;false;select(@Host, Host.@Importance as Imprt, Host.@Vulners as Vulner, Host.@Vulners.CVEs as CVE_Id, Host.@Vulners.SeverityRating as Severity, Host.@Vulners.DiscoveryTime as Discovered, Host.@Vulners.VulnerableEntity.Name as VulnerableEntity, Host.@Vulners.Description as Description, Host.@Vulners.HowToFix as Fix, Host.@Vulners.Metrics.Exploitable as HasExploit, Host.@Vulners.IsTrend as IsTrend, Host.@Vulners.Status, Host.@Vulners.CVSS2TemporalScore as CVSS2TmpScore, Host.@Vulners.CVSS2BaseScore as CVSS2BaseScore, Host.@Vulners.CVSS3TemporalScore as CVSS3TmpScore, Host.@Vulners.CVSS3BaseScore as CVSS3BaseScore, Host.@Vulners.CVSS2Vector as CVSS2Vector, Host.@Vulners.CVSS3Vector as CVSS3Vector, Host.@Vulners.StatusUpdateTime as UpdateTime, Host.@Vulners.DueTime as SolveBefore) | sort(Severity ASC, SolveBefore ASC) | group(@Host, COUNT(*));common
А_Группировка по IP адресам;none;56aae9622e564dda845b510003062edc;false;false;select(@Host, Host.@VULNERS, Host.@VULNERS.CVES, Host.@VULNERS.NAME, Host.@Vulners.SeverityRating, Host.@Vulners.IsTrend, Host.@Vulners.VulnerableEntity.Name, Host.IpAddress, Host.@Vulners.Status) | filter(Host.@VULNERS.CVES != null and Host.@Vulners.Status = 'fixed') | group(Host.IpAddress as IP, Host.@Vulners.SeverityRating as Severity, COUNT(Host.IpAddress)) | sort(Severity ASC);common
А_Группировка по ОС;none;56aae9622e564dda845b510003062edc;false;false;"select(@Host, Host.OsName, Host.@Importance, Host.@NodeVulners, Host.@NodeVulners.SeverityRating, Host.@NodeVulners.VulnerableEntity) | filter(Host.OsName != null and Host.@NodeVulners != null) | sort(Host.@Importance DESC, Host.@NodeVulners.SeverityRating DESC) | group(Host.OsName, COUNT(*)) | sort(""COUNT(*)"" DESC)";common
А_Группировка по всему софту;none;56aae9622e564dda845b510003062edc;false;false;select(@Host, Host.Softs.@Vulners, Host.Softs.@Vulners.CVEs, Host.Softs, Host.Softs.Vendor, Host.Softs.InstallPath) | filter(Host.Softs.@Vulners != null) | group(Host.Softs, COUNT(*)) | sort(Host.Softs ASC);common
А_Успешный пентест;none;216e869560324c9783ab91bd93c21d32;false;false;"select(@Host, Host.@Importance as Imprt, Host.@Vulners as Vulner, Host.@Vulners.DiscoveryTime as Discovered, Host.@Vulners.Description as Description, Host.@Vulners.HowToFix as Fix, Host.@Vulners.Status, Host.@Vulners.StatusUpdateTime as UpdateTime, Host.@Vulners.DueTime as SolveBefore) | filter(Vulner like ""Подобраны%"")";common
А_Сканирование было давно;none;5245e09a25744fbb8da3ba3ce9cbbc95;false;false;"select(Host.@Vulners, Host.IpAddress, Host.Fqdn, Host.@Vulners.SeverityRating, Host.@Vulners.Description, Host.@Vulners.HowToFix, Host.@Vulners.Links, Host.@Vulners.VulnerableEntity.Name, Host.@Vulners.DiscoveryTime, Host.@Vulners.Metrics.Exploitable, Host.@Vulners.IsTrend, Host.@Vulners.StatusUpdateTime, Host.@Vulners.Status) | filter(Host.@Vulners != null and Host.@Vulners != ""null"") | filter(Host.@Vulners.Status = ""new"" or Host.@Vulners.Status = ""inProgress"" or Host.@Vulners.Status = ""awaitingFix"") | sort(Host.@Vulners.SeverityRating DESC)";common
А_Полный отчет для IT;none;5245e09a25744fbb8da3ba3ce9cbbc95;false;false;select(@Host, Host.@Importance, Host.@CreationTime, Host.@UpdateTime) | filter(Host.@CreationTime >= StartOfWeek()) | sort(Host.@Importance ASC);common
А_Новые хосты за неделю;none;5245e09a25744fbb8da3ba3ce9cbbc95;false;false;select(@Host, Host.@Importance as Imprt, Host.@Vulners.SeverityRating as Severity, Host.@Vulners.Metrics.HasFix as HasFix, Host.@Vulners.Metrics.Exploitable as Exploitable) | filter(Imprt = 'H') | sort(Imprt ASC, Severity DESC) | group(Severity, COUNT(*)) | sort(Severity DESC);common
А_Уязвимости на важных активах;none;5245e09a25744fbb8da3ba3ce9cbbc95;false;false;select(@Host, Host.@Importance as Imprt, Host.@CreationTime as Created, Host.@AuditTime as Audit, Host.@PentestTime as Pentest) | filter(Audit = null or Pentest = null) | calc(if Audit = null then False else True as WasAudit, if Pentest = null then False else True as WasPentest) | group(WasAudit, WasPentest, COUNT(@Host));common
А_Было ли сканирование;none;0f37209104c1460c83fcc3a366b7b213;false;false;select(@Host, Host.@Importance as Imprt, Host.@CreationTime as Created, Host.@AuditTime as Audit, Host.@PentestTime as Pentest) | filter(Audit = null or Pentest = null) | calc(if Audit = null then False else True as WasAudit, if Pentest = null then False else True as WasPentest) | group(WasAudit, WasPentest, COUNT(@Host));common
